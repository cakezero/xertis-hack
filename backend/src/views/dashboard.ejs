<!DOCTYPE html>
  <head>
    <title>Admin Dashboard</title>
    <script src="../../../frontend/bundler.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <button id="button" type="button" class="btn btn-primary my-4 form-inline" style="float: right; margin-right: 80px;" onclick="connect()">Connect Wallet</button>
  </head>
  <body>
    <br>
    <br>
    <!--form-->
    <div class="container">
        <h1 class="hi my-4">WhiteList Address</h1>

        <form class="my-4 form-inline">
          <p>Wallet address(es):</p>
          <input type="text" name="addys" placeholder="Enter the array of wallet address(es) to be whitelisted. It should be in '[]'" required class="form-control form-inline col">
          <p class="my-3">Token Id(s):</p>
          <input type="text" name="ids" placeholder="Enter the array of token id(s) of the wallet address(es) pasted above. It should be in '[]'" required class="form-control form-inline col">
          <input type="button" name="butto" class="btn btn-primary my-2" value="Add to WhiteList" onclick="whiteList()">
        </form>
    </div>
  </body>
  <!-- <script charset="utf-8" src="https://cdn.ethers.io/scripts/ethers-v4.min.js" type="text/javascript"></script> -->
  
  <!-- <script> -->
    // const connect = async () => {
    //   if (typeof window.ethereum !== "undefned") {
    //     try {
    //       await ethereum.request({ method: "eth_requestAccounts" });
    //     } catch (error) {
    //       console.log(error);
    //     }
    //     const account = await ethereum.request({ method: "eth_accounts" });
    //     if (account.length === 1) {
    //       document.getElementById(
    //         "button"
    //       ).innerHTML = `Connected to ${account[0]}`;
    //     } else {
    //       document.getElementById("button").innerHTML = "Connected";
    //     }
    //   } else {
    //     alert("Please install metamask");
    //   }
    // };

    // const whiteList = async () => {
    //   const form = document.querySelector('form');
    //   const addys = form.addys.value;
    //   const ids = form.ids.value;
    //   if (!addys && !ids) {
    //     alert('form fields cannot be empty!');
    //   } else if (!ids){
    //     alert('Token id field must br filled!')
    //   } else if (!addys){
    //     alert('Wallet address fields must be filled!')
    //   } else {
    //     if (typeof window.ethereum !== 'undefined') {
    //       const contractAddress = '';
    //       const provider = new ethers.providers.Web3Provider(window.ethereum);
    //       const signer = provider.getSigner();
    //       const contract = new ethers.Contract(contractAddress, abi, signer);
    //       try {
    //         await contract.addWhiteList(addys, ids);
    //       } catch (error) {
    //         alert('error')
    //       }
    //     } else {
    //       alert("Please install metamask");
    //     }
    //   }
    // }
  <!-- </script> -->
</html>
